---
import Badge from "@/components/Badge.astro";
import ButtonLink from "@/components/ButtonLink.astro";
import ContentTags from "@/components/ContentTags.astro";
import { getProjectBadgeStyle } from "@/utils/content";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";

type Props = CollectionEntry<"projects">["data"];

const {
  title,
  description,
  heroImage,
  tags,
  liveLink,
  repository,
  liveLinkText,
  state,
} = Astro.props;

const badgeStyle = getProjectBadgeStyle(state);
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={heroImage} />
    <style>
      main {
        width: calc(100% - 2em);
        max-width: 100%;
        margin: 0;
      }
      .hero-image {
        width: 100%;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
      }
      .prose {
        width: 720px;
        max-width: calc(100% - 2em);
        margin: auto;
        padding: 1em;
        color: rgb(var(--gray-dark));
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
      }
      .date {
        margin-bottom: 0.5em;
        color: rgb(var(--gray));
      }
      .last-updated-on {
        font-style: italic;
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <div class="hero-image">
          {
            heroImage && (
              <Image
                width={500}
                height={480}
                src={heroImage}
                alt={title}
                transition:name={title}
              />
            )
          }
        </div>
        <div class="prose">
          <div class="title">
            <div class="date">
              <ContentTags tags={tags} />
            </div>
            <h1>{title}</h1>
            <div class="flex gap-2">
              <div>State:</div>
              <div><Badge text={state} colorClass={badgeStyle} /></div>
            </div>
            <hr />
          </div>

          <slot />

          <div
            class="mt-8 flex flex-col items-start md:flex-row space-y-4 md:space-y-0 md:space-x-4"
          >
            {
              repository && (
                <ButtonLink
                  href={repository}
                  target="_blank"
                  text="See on Github"
                  icon="radix-icons:github-logo"
                  class="bg-gray-800 text-white hover:bg-gray-700 hover:text-white"
                />
              )
            }

            {
              liveLink && (
                <ButtonLink
                  href={liveLink}
                  target="_blank"
                  text={liveLinkText || "See live"}
                  icon="radix-icons:external-link"
                  class="shadow-md bg-white text-gray-800 hover:bg-gray-200 hover:text-gray-800"
                />
              )
            }
          </div>
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
