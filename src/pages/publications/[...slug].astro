---
import BackToPrev from "@/components/BackToPrev.astro";
import Container from "@/components/Container.astro";
import { HOME } from "@/consts";
import PageLayout from "@/layouts/PageLayout.astro";
import PublicationDetails from "@/layouts/PublicationDetails.astro";
import { readingTime } from "@/lib/utils";
import { getCollection, type CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const publications = await getCollection("publications");
  return publications
    .sort((a, b) => a.data.title.localeCompare(b.data.title))
    .map((publication) => ({
      params: { slug: publication.slug },
      props: publication,
    }));
}
type Props = CollectionEntry<"publications">;

const publication = Astro.props;
const { Content } = await publication.render();

function getPublicationPrefix(pubType: typeof publication.data.pubType) {
  let prefix = "";
  switch (pubType) {
    case "Journal":
      prefix = "Published in the";
      break;
    case "Conference":
    case "Workshop":
      prefix = "Accepted to";
      break;
    case "arXiv":
      prefix = "Preprint on";
      break;
  }

  return prefix;
}
---

<PageLayout title={HOME.TITLE} description={HOME.DESCRIPTION}>
  <Container>
    <div class="animate">
      <BackToPrev href="/publications"> Back to publications </BackToPrev>
    </div>

    <div class="space-y-1 my-10">
      <div class="animate flex items-center gap-1.5">
        &bull;
        <div class="font-base text-sm">
          {readingTime(publication.body)}
        </div>
      </div>
      <div class="animate text-2xl font-semibold text-black dark:text-white">
        {publication.data.title}
      </div>
      <div class="text-sm underline italic mt-1 font-base animate">
        <p>
          {getPublicationPrefix(publication.data.pubType)}
          {publication.data.where}
        </p>
      </div>
    </div>
    <PublicationDetails {...publication.data}>
      <Content />
    </PublicationDetails>
  </Container>
</PageLayout>
